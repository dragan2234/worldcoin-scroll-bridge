{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_treeDepth",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getTreeDepth",
            "inputs": [],
            "outputs": [
                { "name": "", "type": "uint8", "internalType": "uint8" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isLocal",
            "inputs": [],
            "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "latestRoot",
            "inputs": [],
            "outputs": [
                { "name": "", "type": "uint256", "internalType": "uint256" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "messenger",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IL2ScrollMessenger"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [
                { "name": "", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "receiveRoot",
            "inputs": [
                {
                    "name": "newRoot",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "renounceOwnership",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "rootHistory",
            "inputs": [
                { "name": "", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [
                { "name": "", "type": "uint128", "internalType": "uint128" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "rootHistoryExpiry",
            "inputs": [],
            "outputs": [
                { "name": "", "type": "uint256", "internalType": "uint256" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "setRootHistoryExpiry",
            "inputs": [
                {
                    "name": "expiryTime",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferOwnership",
            "inputs": [
                {
                    "name": "_owner",
                    "type": "address",
                    "internalType": "address"
                },
                { "name": "_isLocal", "type": "bool", "internalType": "bool" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferOwnership",
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "verifyProof",
            "inputs": [
                {
                    "name": "root",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "signalHash",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "nullifierHash",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "externalNullifierHash",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "proof",
                    "type": "uint256[8]",
                    "internalType": "uint256[8]"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "OwnershipTransferred",
            "inputs": [
                {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OwnershipTransferred",
            "inputs": [
                {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "isLocal",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "RootAdded",
            "inputs": [
                {
                    "name": "root",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "timestamp",
                    "type": "uint128",
                    "indexed": false,
                    "internalType": "uint128"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "RootHistoryExpirySet",
            "inputs": [
                {
                    "name": "newExpiry",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        { "type": "error", "name": "CannotOverwriteRoot", "inputs": [] },
        { "type": "error", "name": "ExpiredRoot", "inputs": [] },
        { "type": "error", "name": "NoRootsSeen", "inputs": [] },
        { "type": "error", "name": "NonExistentRoot", "inputs": [] },
        {
            "type": "error",
            "name": "OwnableInvalidOwner",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "OwnableUnauthorizedAccount",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "UnsupportedTreeDepth",
            "inputs": [
                { "name": "depth", "type": "uint8", "internalType": "uint8" }
            ]
        }
    ],
    "bytecode": {
        "object": "0x60a060405262093a80600055604051610017906101b3565b604051809103906000f080158015610033573d6000803e3d6000fd5b50600380546001600160a01b03929092166001600160a01b03199283161790556005805490911673ba50f5340fb9f3bd074bd638c9be13ecb36e603d179055600680547401ba50f5340fb9f3bd074bd638c9be13ecb36e603d6001600160a81b03199091161790553480156100a757600080fd5b50604051620028c2380380620028c28339810160408190526100c8916101c1565b33816100d38161013a565b6100fa57604051630220cee360e61b815260ff821660048201526024015b60405180910390fd5b60ff166080526001600160a01b03811661012a57604051631e4fbdf760e01b8152600060048201526024016100f1565b61013381610161565b50506101eb565b60006010602060ff8416821180159061015957508060ff168460ff1611155b949350505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611ada8062000de883390190565b6000602082840312156101d357600080fd5b815160ff811681146101e457600080fd5b9392505050565b608051610be16200020760003960006101a50152610be16000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063b0d690791161008c578063d7b0fef111610066578063d7b0fef114610207578063f1c621ee1461020f578063f2fde38b14610262578063fbde929b1461027557600080fd5b8063b0d69079146101cf578063b242e534146101e1578063c70aa727146101f457600080fd5b8063715018a6116100bd578063715018a6146101785780638da5cb5b146101805780638e5cdd501461019e57600080fd5b80630ee04629146100e4578063354ca1201461011e5780633cb747bf14610133575b600080fd5b6006546101099074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61013161012c366004610a4c565b610288565b005b6006546101539073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610115565b61013161033f565b60045473ffffffffffffffffffffffffffffffffffffffff16610153565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610115565b6000545b604051908152602001610115565b6101316101ef366004610ac1565b610353565b610131610202366004610aff565b6104d2565b6101d36104e6565b61024161021d366004610aff565b6002602052600090815260409020546fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff9091168152602001610115565b610131610270366004610b18565b61052b565b610131610283366004610aff565b61058c565b6102918561059d565b60035460408051608081018252878152602081018690528082018790526060810185905290517f2357251100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163235725119161030891859190600401610b3c565b60006040518083038186803b15801561032057600080fd5b505afa158015610334573d6000803e3d6000fd5b505050505050505050565b61034761065f565b61035160006108b2565b565b61035b61065f565b73ffffffffffffffffffffffffffffffffffffffff8216610403576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5363726f6c6c43726f7373446f6d61696e4f776e61626c653a206e6577206f7760448201527f6e657220697320746865207a65726f206164647265737300000000000000000060648201526084015b60405180910390fd5b600061042460045473ffffffffffffffffffffffffffffffffffffffff1690565b905061042f836108b2565b6006805483151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff90911617905560405173ffffffffffffffffffffffffffffffffffffffff80851691908316907f7fdc2a4b6eb39ec3363d710d188620bd1e97b3c434161f187b4d0dc0544faa58906104c590861515815260200190565b60405180910390a3505050565b6104da61065f565b6104e381610929565b50565b6000600154600003610524576040517f5b8dabb700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060015490565b61053361065f565b73ffffffffffffffffffffffffffffffffffffffff8116610583576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016103fa565b6104e3816108b2565b61059461065f565b6104e381610964565b60015481036105a95750565b6000818152600260205260408120546fffffffffffffffffffffffffffffffff1690819003610604576040517fddae3b7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000546106236fffffffffffffffffffffffffffffffff831642610b77565b111561065b576040517f3ae7359e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60065474010000000000000000000000000000000000000000900460ff161561074557336106a260045473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610351576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f5363726f6c6c43726f7373446f6d61696e4f776e61626c653a2063616c6c657260448201527f206973206e6f7420746865206f776e657200000000000000000000000000000060648201526084016103fa565b60065473ffffffffffffffffffffffffffffffffffffffff1633146107ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f5363726f6c6c43726f7373446f6d61696e4f776e61626c653a2063616c6c657260448201527f206973206e6f7420746865206d657373656e676572000000000000000000000060648201526084016103fa565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d9190610bb7565b73ffffffffffffffffffffffffffffffffffffffff166106a260045473ffffffffffffffffffffffffffffffffffffffff1690565b6004805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008190556040518181527f147b815b6a3a8dd5d49310410e089f6b5e9f3782e944772edc938c8bb48ef1219060200160405180910390a150565b6000818152600260205260409020546fffffffffffffffffffffffffffffffff1680156109bd576040517f6650c4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600182905560008281526002602090815260409182902080547fffffffffffffffffffffffffffffffff0000000000000000000000000000000016426fffffffffffffffffffffffffffffffff8116918217909255835186815292830152917fe97c89cbb137505b36f55ebfc9732fd6c4c73ff43d49db239fc25f6e7a534145910160405180910390a1505050565b6000806000806000610180808789031215610a6657600080fd5b86359550602087013594506040870135935060608701359250878188011115610a8e57600080fd5b506080860190509295509295909350565b73ffffffffffffffffffffffffffffffffffffffff811681146104e357600080fd5b60008060408385031215610ad457600080fd5b8235610adf81610a9f565b915060208301358015158114610af457600080fd5b809150509250929050565b600060208284031215610b1157600080fd5b5035919050565b600060208284031215610b2a57600080fd5b8135610b3581610a9f565b9392505050565b61018081016101008085843782018360005b6004811015610b6d578151835260209283019290910190600101610b4e565b5050509392505050565b81810381811115610bb1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600060208284031215610bc957600080fd5b8151610b3581610a9f56fea164736f6c6343000815000a608060405234801561001057600080fd5b50611aba806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063235725111461004657806344f636921461005b578063f2457c8d14610084575b600080fd5b61005961005436600461198b565b610097565b005b61006e6100693660046119c2565b61032f565b60405161007b91906119e6565b60405180910390f35b610059610092366004611a17565b61038c565b6000806100a3836106c2565b9150915060006040516101008682377f168e4fddac50a40d5bcff39c7fa9207cd368444c0c01a86690a6645b52f3aa1f6101008201527f2139a256456825daa623957c4f2ea1a0d26f135769e450759142a7159b0a44766101208201527f07859424108de88bfbe5c80a19c0e80ba35fda4383d3fd125305dd04b4c08fe46101408201527f142ad7a93ca0c554a9f0303059e5a24e85400004a730598bd423b0090f4b3d4a6101608201527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e26101808201527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266101a08201527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c6101c08201527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab6101e08201527e1752a100a72fdf1e5a5d6ea841cc20ec838bccfcf7bd559e79f1c9c759b6a06102008201527f192a8cc13cd9f762871f21e43451c6ca9eeab2cb2987c4e366a185c25dac2e7f61022082015283610240820152826102608201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26102808201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6102a08201527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec6102c08201527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d6102e08201526020816103008360085afa905116905080610328576040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b61033761190d565b61034a82358360015b60200201356109c8565b81526103686060830135604084013560a08501356080860135610b67565b6020830152604082015261038260c0830135836007610340565b6060820152919050565b60008061039f84825b6020020135611041565b909250905060008080806103bb604089013560208a0135611165565b929650909450925090506000806103d38a6003610395565b915091506000806103e38b6106c2565b915091506103ef61192b565b8a8152602081018a905260408101889052606081018990526080810186905260a0810187905260c0810185905260e081018490527f168e4fddac50a40d5bcff39c7fa9207cd368444c0c01a86690a6645b52f3aa1f6101008201527f2139a256456825daa623957c4f2ea1a0d26f135769e450759142a7159b0a44766101208201527f07859424108de88bfbe5c80a19c0e80ba35fda4383d3fd125305dd04b4c08fe46101408201527f142ad7a93ca0c554a9f0303059e5a24e85400004a730598bd423b0090f4b3d4a6101608201527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e26101808201527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266101a08201527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c6101c08201527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab6101e08201527e1752a100a72fdf1e5a5d6ea841cc20ec838bccfcf7bd559e79f1c9c759b6a06102008201527f192a8cc13cd9f762871f21e43451c6ca9eeab2cb2987c4e366a185c25dac2e7f610220820152610240810183905261026081018290527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26102808201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6102a08201527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec6102c08201527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d6102e0820152600061065e61194a565b6020816103008560085afa915081158061067a57508051600114155b156106b1576040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050505050505050505050565b6000806000600190506040516040810160007f0335f514c2acb9b255aae85514122267cd7d16e374c6231a2c34417d3449125483527f07fa1580c1cc3ed4f6d660c6f60f86afedd8a12fb90b2e8ed4f7e310c88b97f760208401527f20b781dd0db3b7980a4b3814128c86e597e1442d0fc9eb7f932a5229494d6b7982527f17d1cef436eb2f665670c7b34854e62c227043a7b111a539c0295518bbab3ca96020830152863590508060408301527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181108416935060408260608460075afa8416935060408360808560065afa841693507f260945445b4205f874ab7e203a18240e51c9d3c896ea300d40132b1c2f50299a82527f11087a8b76b0f957e1c482c909302916795f811a06866059e403689c01c903fb6020830152602087013590508060408301527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181108416935060408260608460075afa8416935060408360808560065afa841693507f11d20fd81c0e5cf48ba1469ccb8ac99dcdc7cf746a6e70762a939d63dcc52dbf82527f2d447c5f134eff527d7bcaace88b3842c42b800d8dc049e0a6e72f5efc14293d6020830152604087013590508060408301527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181108416935060408260608460075afa8416935060408360808560065afa841693507f107cd54a1606a6a873bed4c1b76af48975e66dcf6c127b4c799ad4fdd230b87c82527f1a51b81f6c07725ebcc56ebb1c482b99340eaa9bcb86cc09aed6f58a28e530b66020830152606087013590508060408301527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110841693505060408160608360075afa831692505060408160808360065afa815160209092015191945090925016806109c2576040517fa54f8e2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50915091565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4783101580610a1957507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478210155b15610a50576040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82158015610a5c575081155b15610a6957506000610b61565b6000610ade7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760037f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47877f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47898a0909086114b0565b9050808303610af3575050600182901b610b61565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478082068103068303610b2d575050600182811b17610b61565b6040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b92915050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4786101580610bb957507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478510155b80610be457507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478410155b80610c0f57507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478310155b15610c46576040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82848688171717600003610c5f57506000905080611038565b600080807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610caf60037f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611a73565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478a8c0909905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478a7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478c8d0909905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478a7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478c8d090990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089450610e707f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e775087f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479081900681030690565b9350505050600080610ef77f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4780610ea957610ea9611a44565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478586097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47878809086114b0565b9050610f687f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd477f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea47f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478488080961153f565b15915050610f7783838361159b565b90935091508683148015610f8a57508186145b15610fb45780610f9b576000610f9e565b60025b60ff1660028a901b176000179450879350611034565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478084068103068714801561100e57507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4780830681030686145b15610b2d578061101f576000611022565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b6000808260000361105757506000928392509050565b600183811c9250808416147f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4783106110bb576040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61112e7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760037f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47867f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4788890909086114b0565b915080156109c2577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47808306810306915050915091565b600080808085158015611176575084155b1561118c575060009250829150819050806114a7565b600286811c945085935060018088161490808816147f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47861015806111f057507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478510155b15611227576040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761127560037f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611a73565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47888a0909905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47887f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478a8b0909905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47887f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478a8b090990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e50896506114367f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e775087f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479081900681030690565b955061144387878661159b565b909750955084156114a1577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4780880681030696507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4780870681030695505b50505050505b92959194509250565b60006114dc827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526117f2565b9050817f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478283091461153a576040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008061156c837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526117f2565b9050827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47828309149392505050565b600080806115f17f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47808788097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47898a09086114b0565b90508315611622577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47908190068103065b6116917f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd477f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea47f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47848a08096114b0565b92507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476116e17f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760028609611882565b860991507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476117587f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478485097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479081900681030690565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4785860908861415806117b257507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47808385096002098514155b156117e9576040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50935093915050565b60008060405160208152602080820152602060408201528460608201528360808201527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760a082015260208160c08360055afa90519250905080610b5f576040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006118ae827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd456117f2565b90507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781830960011461153a576040517f7fcdd1f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052806004906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b806101008101831015610b6157600080fd5b8060808101831015610b6157600080fd5b600080610180838503121561199f57600080fd5b6119a98484611968565b91506119b984610100850161197a565b90509250929050565b600061010082840312156119d557600080fd5b6119df8383611968565b9392505050565b60808101818360005b6004811015611a0e5781518352602092830192909101906001016119ef565b50505092915050565b6000806101008385031215611a2b57600080fd5b611a35848461197a565b91506119b9846080850161197a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b81810381811115610b61577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000815000a",
        "sourceMap": "620:2041:30:-:0;;;1291:7:32;1252:46;;1904:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1857:70:32;;;-1:-1:-1;;;;;1857:70:32;;;;-1:-1:-1;;;;;;1857:70:32;;;;;;915:84:28;;;;;;956:42;915:84;;;1005:80;;;1259:26;-1:-1:-1;;;;;;1259:26:28;;;;;;1125:78:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1189:10;1169;4018:48:32;1169:10:30;4018:36:32;:48::i;:::-;4013:119;;4089:32;;-1:-1:-1;;;4089:32:32;;464:4:59;452:17;;4089:32:32;;;434:36:59;407:18;;4089:32:32;;;;;;;;4013:119;4142:22;;;;-1:-1:-1;;;;;1273:26:19;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:19;;1350:1;1322:31;;;627:51:59;600:18;;1322:31:19;481:203:59;1269:95:19;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;1125:78:30;620:2041;;386:207:58;444:19;492:2;521;540:21;;;;-1:-1:-1;540:21:58;;;:46;;;578:8;565:21;;:9;:21;;;;540:46;533:53;386:207;-1:-1:-1;;;;386:207:58:o;2912:187:19:-;3004:6;;;-1:-1:-1;;;;;3020:17:19;;;-1:-1:-1;;;;;;3020:17:19;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;620:2041:30:-;;;;;;;;:::o;14:273:59:-;82:6;135:2;123:9;114:7;110:23;106:32;103:52;;;151:1;148;141:12;103:52;183:9;177:16;233:4;226:5;222:16;215:5;212:27;202:55;;253:1;250;243:12;202:55;276:5;14:273;-1:-1:-1;;;14:273:59:o;481:203::-;620:2041:30;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c8063b0d690791161008c578063d7b0fef111610066578063d7b0fef114610207578063f1c621ee1461020f578063f2fde38b14610262578063fbde929b1461027557600080fd5b8063b0d69079146101cf578063b242e534146101e1578063c70aa727146101f457600080fd5b8063715018a6116100bd578063715018a6146101785780638da5cb5b146101805780638e5cdd501461019e57600080fd5b80630ee04629146100e4578063354ca1201461011e5780633cb747bf14610133575b600080fd5b6006546101099074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61013161012c366004610a4c565b610288565b005b6006546101539073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610115565b61013161033f565b60045473ffffffffffffffffffffffffffffffffffffffff16610153565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610115565b6000545b604051908152602001610115565b6101316101ef366004610ac1565b610353565b610131610202366004610aff565b6104d2565b6101d36104e6565b61024161021d366004610aff565b6002602052600090815260409020546fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff9091168152602001610115565b610131610270366004610b18565b61052b565b610131610283366004610aff565b61058c565b6102918561059d565b60035460408051608081018252878152602081018690528082018790526060810185905290517f2357251100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163235725119161030891859190600401610b3c565b60006040518083038186803b15801561032057600080fd5b505afa158015610334573d6000803e3d6000fd5b505050505050505050565b61034761065f565b61035160006108b2565b565b61035b61065f565b73ffffffffffffffffffffffffffffffffffffffff8216610403576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5363726f6c6c43726f7373446f6d61696e4f776e61626c653a206e6577206f7760448201527f6e657220697320746865207a65726f206164647265737300000000000000000060648201526084015b60405180910390fd5b600061042460045473ffffffffffffffffffffffffffffffffffffffff1690565b905061042f836108b2565b6006805483151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff90911617905560405173ffffffffffffffffffffffffffffffffffffffff80851691908316907f7fdc2a4b6eb39ec3363d710d188620bd1e97b3c434161f187b4d0dc0544faa58906104c590861515815260200190565b60405180910390a3505050565b6104da61065f565b6104e381610929565b50565b6000600154600003610524576040517f5b8dabb700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060015490565b61053361065f565b73ffffffffffffffffffffffffffffffffffffffff8116610583576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016103fa565b6104e3816108b2565b61059461065f565b6104e381610964565b60015481036105a95750565b6000818152600260205260408120546fffffffffffffffffffffffffffffffff1690819003610604576040517fddae3b7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000546106236fffffffffffffffffffffffffffffffff831642610b77565b111561065b576040517f3ae7359e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60065474010000000000000000000000000000000000000000900460ff161561074557336106a260045473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610351576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f5363726f6c6c43726f7373446f6d61696e4f776e61626c653a2063616c6c657260448201527f206973206e6f7420746865206f776e657200000000000000000000000000000060648201526084016103fa565b60065473ffffffffffffffffffffffffffffffffffffffff1633146107ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f5363726f6c6c43726f7373446f6d61696e4f776e61626c653a2063616c6c657260448201527f206973206e6f7420746865206d657373656e676572000000000000000000000060648201526084016103fa565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d9190610bb7565b73ffffffffffffffffffffffffffffffffffffffff166106a260045473ffffffffffffffffffffffffffffffffffffffff1690565b6004805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008190556040518181527f147b815b6a3a8dd5d49310410e089f6b5e9f3782e944772edc938c8bb48ef1219060200160405180910390a150565b6000818152600260205260409020546fffffffffffffffffffffffffffffffff1680156109bd576040517f6650c4d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600182905560008281526002602090815260409182902080547fffffffffffffffffffffffffffffffff0000000000000000000000000000000016426fffffffffffffffffffffffffffffffff8116918217909255835186815292830152917fe97c89cbb137505b36f55ebfc9732fd6c4c73ff43d49db239fc25f6e7a534145910160405180910390a1505050565b6000806000806000610180808789031215610a6657600080fd5b86359550602087013594506040870135935060608701359250878188011115610a8e57600080fd5b506080860190509295509295909350565b73ffffffffffffffffffffffffffffffffffffffff811681146104e357600080fd5b60008060408385031215610ad457600080fd5b8235610adf81610a9f565b915060208301358015158114610af457600080fd5b809150509250929050565b600060208284031215610b1157600080fd5b5035919050565b600060208284031215610b2a57600080fd5b8135610b3581610a9f565b9392505050565b61018081016101008085843782018360005b6004811015610b6d578151835260209283019290910190600101610b4e565b5050509392505050565b81810381811115610bb1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600060208284031215610bc957600080fd5b8151610b3581610a9f56fea164736f6c6343000815000a",
        "sourceMap": "620:2041:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1259:26:28;;;;;;;;;;;;;;;179:14:59;;172:22;154:41;;142:2;127:18;1259:26:28;;;;;;;;7152:473:32;;;;;;:::i;:::-;;:::i;:::-;;1005:80:28;;;;;;;;;;;;961:42:59;949:55;;;931:74;;919:2;904:18;1005:80:28;757:254:59;2293:101:19;;;:::i;1638:85::-;1710:6;;;;1638:85;;9254:93:32;;;1419:4:59;9331:9:32;1407:17:59;1389:36;;1377:2;1362:18;9254:93:32;1247:184:59;8276:110:32;8334:7;8360:19;8276:110;;;1582:25:59;;;1570:2;1555:18;8276:110:32;1436:177:59;1992:347:28;;;;;;:::i;:::-;;:::i;2525:134:30:-;;;;;;:::i;:::-;;:::i;8007:172:32:-;;;:::i;1540:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2559:34:59;2547:47;;;2529:66;;2517:2;2502:18;1540:46:32;2383:218:59;2543:215:19;;;;;;:::i;:::-;;:::i;1913:103:30:-;;;;;;:::i;:::-;;:::i;7152:473:32:-;7414:22;7431:4;7414:16;:22::i;:::-;7502:17;;:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;;;;;:29;;:116;;7545:5;;7502:116;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7152:473;;;;;:::o;2293:101:19:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1992:347:28:-;1531:13:19;:11;:13::i;:::-;2087:20:28::1;::::0;::::1;2079:88;;;::::0;::::1;::::0;;3708:2:59;2079:88:28::1;::::0;::::1;3690:21:59::0;3747:2;3727:18;;;3720:30;3786:34;3766:18;;;3759:62;3857:25;3837:18;;;3830:53;3900:19;;2079:88:28::1;;;;;;;;;2178:16;2197:7;1710:6:19::0;;;;;1638:85;2197:7:28::1;2178:26;;2214;2233:6;2214:18;:26::i;:::-;2250:7;:18:::0;;;::::1;;::::0;::::1;::::0;;;::::1;;::::0;;2284:48:::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;2260:8;179:14:59;172:22;154:41;;142:2;127:18;;14:187;2284:48:28::1;;;;;;;;2069:270;1992:347:::0;;:::o;2525:134:30:-;1531:13:19;:11;:13::i;:::-;2619:33:30::1;2641:10;2619:21;:33::i;:::-;2525:134:::0;:::o;8007:172:32:-;8058:7;8081:11;;8096:1;8081:16;8077:67;;8120:13;;;;;;;;;;;;;;8077:67;-1:-1:-1;8161:11:32;;;8007:172::o;2543:215:19:-;1531:13;:11;:13::i;:::-;2627:22:::1;::::0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;931:74:59::0;904:18;;2672:31:19::1;757:254:59::0;2623:91:19::1;2723:28;2742:8;2723:18;:28::i;1913:103:30:-:0;1531:13:19;:11;:13::i;:::-;1988:21:30::1;2001:7;1988:12;:21::i;5704:608:32:-:0;5824:11;;5816:4;:19;5812:56;;5704:608;:::o;5812:56::-;5943:21;5967:17;;;:11;:17;;;;;;;;;6067:18;;;6063:73;;6108:17;;;;;;;;;;;;;;6063:73;6240:19;;6206:31;;;;:15;:31;:::i;:::-;:53;6202:104;;;6282:13;;;;;;;;;;;;;;6202:104;5758:554;5704:608;:::o;2589:524:28:-;2649:7;;;;;;;2645:462;;;2691:10;2680:7;1710:6:19;;;;;1638:85;2680:7:28;:21;;;2672:83;;;;;;;4419:2:59;2672:83:28;;;4401:21:59;4458:2;4438:18;;;4431:30;4497:34;4477:18;;;4470:62;4568:19;4548:18;;;4541:47;4605:19;;2672:83:28;4217:413:59;2645:462:28;2833:9;;;;2811:10;:32;2786:144;;;;;;;4837:2:59;2786:144:28;;;4819:21:59;4876:2;4856:18;;;4849:30;4915:34;4895:18;;;4888:62;4986:23;4966:18;;;4959:51;5027:19;;2786:144:28;4635:417:59;2786:144:28;2981:9;;;;;;;;;;;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2970:43;;:7;1710:6:19;;;;;1638:85;2912:187;3004:6;;;;3020:17;;;;;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9002:165:32:-;9080:19;:32;;;9128;;1582:25:59;;;9128:32:32;;1570:2:59;1555:18;9128:32:32;;;;;;;9002:165;:::o;4858:403::-;4916:25;4944:20;;;:11;:20;;;;;;;;4979:35;;4975:94;;5037:21;;;;;;;;;;;;;;4975:94;5138:11;:21;;;5079;5169:20;;;:11;:20;;;;;;;;;:36;;;;5111:15;5169:36;;;;;;;;;5221:33;;5487:25:59;;;5528:18;;;5521:75;5111:15:32;5221:33;;5460:18:59;5221:33:32;;;;;;;4906:355;;4858:403;:::o;206:546:59:-;326:6;334;342;350;358;389:3;433:2;421:9;412:7;408:23;404:32;401:52;;;449:1;446;439:12;401:52;485:9;472:23;462:33;;542:2;531:9;527:18;514:32;504:42;;593:2;582:9;578:18;565:32;555:42;;644:2;633:9;629:18;616:32;606:42;;683:7;678:2;667:9;663:18;660:31;657:51;;;704:1;701;694:12;657:51;;742:3;731:9;727:19;717:29;;206:546;;;;;;;;:::o;1618:154::-;1704:42;1697:5;1693:54;1686:5;1683:65;1673:93;;1762:1;1759;1752:12;1777:416;1842:6;1850;1903:2;1891:9;1882:7;1878:23;1874:32;1871:52;;;1919:1;1916;1909:12;1871:52;1958:9;1945:23;1977:31;2002:5;1977:31;:::i;:::-;2027:5;-1:-1:-1;2084:2:59;2069:18;;2056:32;2126:15;;2119:23;2107:36;;2097:64;;2157:1;2154;2147:12;2097:64;2180:7;2170:17;;;1777:416;;;;;:::o;2198:180::-;2257:6;2310:2;2298:9;2289:7;2285:23;2281:32;2278:52;;;2326:1;2323;2316:12;2278:52;-1:-1:-1;2349:23:59;;2198:180;-1:-1:-1;2198:180:59:o;2606:247::-;2665:6;2718:2;2706:9;2697:7;2693:23;2689:32;2686:52;;;2734:1;2731;2724:12;2686:52;2773:9;2760:23;2792:31;2817:5;2792:31;:::i;:::-;2842:5;2606:247;-1:-1:-1;;;2606:247:59:o;2858:643::-;3114:3;3099:19;;3137:6;;3176;3103:9;3152:35;3207:18;;3267:6;3291:1;3301:194;3315:4;3312:1;3309:11;3301:194;;;3374:13;;3362:26;;3411:4;3435:12;;;;3470:15;;;;3335:1;3328:9;3301:194;;;3305:3;;;2858:643;;;;;:::o;3930:282::-;3997:9;;;4018:11;;;4015:191;;;4062:77;4059:1;4052:88;4163:4;4160:1;4153:15;4191:4;4188:1;4181:15;4015:191;3930:282;;;;:::o;5057:251::-;5127:6;5180:2;5168:9;5159:7;5155:23;5151:32;5148:52;;;5196:1;5193;5186:12;5148:52;5228:9;5222:16;5247:31;5272:5;5247:31;:::i",
        "linkReferences": {},
        "immutableReferences": { "43262": [{ "start": 421, "length": 32 }] }
    },
    "methodIdentifiers": {
        "getTreeDepth()": "8e5cdd50",
        "isLocal()": "0ee04629",
        "latestRoot()": "d7b0fef1",
        "messenger()": "3cb747bf",
        "owner()": "8da5cb5b",
        "receiveRoot(uint256)": "fbde929b",
        "renounceOwnership()": "715018a6",
        "rootHistory(uint256)": "f1c621ee",
        "rootHistoryExpiry()": "b0d69079",
        "setRootHistoryExpiry(uint256)": "c70aa727",
        "transferOwnership(address)": "f2fde38b",
        "transferOwnership(address,bool)": "b242e534",
        "verifyProof(uint256,uint256,uint256,uint256,uint256[8])": "354ca120"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_treeDepth\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CannotOverwriteRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoRootsSeen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentRoot\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"depth\",\"type\":\"uint8\"}],\"name\":\"UnsupportedTreeDepth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLocal\",\"type\":\"bool\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"timestamp\",\"type\":\"uint128\"}],\"name\":\"RootAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExpiry\",\"type\":\"uint256\"}],\"name\":\"RootHistoryExpirySet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getTreeDepth\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract IL2ScrollMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRoot\",\"type\":\"uint256\"}],\"name\":\"receiveRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rootHistory\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootHistoryExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"name\":\"setRootHistoryExpiry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLocal\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signalHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalNullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Worldcoin\",\"details\":\"This contract is deployed on Optimism and is called by the L1 Proxy contract for each new      root insertion.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UnsupportedTreeDepth(uint8)\":[{\"params\":{\"depth\":\"The tree depth that was passed.\"}}]},\"events\":{\"OwnershipTransferred(address,address,bool)\":{\"params\":{\"isLocal\":\"Configures the `isLocal` contract variable.\",\"newOwner\":\"The new owner of the contract.\",\"previousOwner\":\"The previous owner of the contract.\"}},\"RootAdded(uint256,uint128)\":{\"params\":{\"root\":\"The value of the root that was added.\",\"timestamp\":\"The timestamp of insertion for the given root.\"}},\"RootHistoryExpirySet(uint256)\":{\"params\":{\"newExpiry\":\"The new expiry time.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_treeDepth\":\"The depth of the WorldID Semaphore merkle tree.\"}},\"latestRoot()\":{\"custom:reverts\":\"NoRootsSeen If there is no latest root.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"receiveRoot(uint256)\":{\"custom:reverts\":\"CannotOverwriteRoot If the root already exists in the root history.string If the caller is not the owner.\",\"details\":\"This function can revert if Scroll's ScrollMessenger stops processing proofs\",\"params\":{\"newRoot\":\"The value of the new root.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRootHistoryExpiry(uint256)\":{\"custom:reverts\":\"string If the caller is not the owner.\",\"params\":{\"expiryTime\":\"The new amount of time it takes for a root to expire.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferOwnership(address,bool)\":{\"params\":{\"_isLocal\":\"Configures the locality of the ownership.\",\"_owner\":\"The new owner of the contract.\"}},\"verifyProof(uint256,uint256,uint256,uint256,uint256[8])\":{\"custom:reverts\":\"string If the zero-knowledge proof cannot be verified for the public inputs.\",\"details\":\"Note that a double-signaling check is not included here, and should be carried by the      caller.\",\"params\":{\"externalNullifierHash\":\"A keccak256 hash of the external nullifier\",\"nullifierHash\":\"The nullifier hash\",\"proof\":\"The zero-knowledge proof\",\"root\":\"The root of the Merkle tree\",\"signalHash\":\"A keccak256 hash of the Semaphore signal\"}}},\"title\":\"Scroll World ID Bridge\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotOverwriteRoot()\":[{\"notice\":\"Emitted when attempting to update the timestamp for a root that already has one.\"}],\"ExpiredRoot()\":[{\"notice\":\"Emitted when attempting to validate a root that has expired.\"}],\"NoRootsSeen()\":[{\"notice\":\"Emitted if the latest root is requested but the bridge has not seen any roots yet.\"}],\"NonExistentRoot()\":[{\"notice\":\"Emitted when attempting to validate a root that has yet to be added to the root         history.\"}],\"UnsupportedTreeDepth(uint8)\":[{\"notice\":\"Emitted when the provided semaphore tree depth is unsupported.\"}]},\"events\":{\"OwnershipTransferred(address,address,bool)\":{\"notice\":\"Emits when ownership of the contract is transferred. Includes the         isLocal field in addition to the standard `Ownable` OwnershipTransferred event.\"},\"RootAdded(uint256,uint128)\":{\"notice\":\"Emitted when a new root is received by the contract.\"},\"RootHistoryExpirySet(uint256)\":{\"notice\":\"Emitted when the expiry time for the root history is updated.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the contract the depth of the associated merkle tree.\"},\"getTreeDepth()\":{\"notice\":\"Gets the Semaphore tree depth the contract was initialized with.\"},\"isLocal()\":{\"notice\":\"If true, the contract uses the cross domain _checkOwner function override.         If false it uses the standard Ownable _checkOwner function.\"},\"latestRoot()\":{\"notice\":\"Gets the value of the latest root.\"},\"receiveRoot(uint256)\":{\"notice\":\"This function is called by the state bridge contract when it forwards a new root to         the bridged WorldID.\"},\"rootHistory(uint256)\":{\"notice\":\"The mapping between the value of the merkle tree root and the timestamp at which it         entered the root history.\"},\"rootHistoryExpiry()\":{\"notice\":\"Gets the amount of time it takes for a root in the root history to expire.\"},\"setRootHistoryExpiry(uint256)\":{\"notice\":\"Sets the amount of time it takes for a root in the root history to expire.\"},\"transferOwnership(address,bool)\":{\"notice\":\"Allows for ownership to be transferred with specifying the locality.\"},\"verifyProof(uint256,uint256,uint256,uint256,uint256[8])\":{\"notice\":\"A verifier for the semaphore protocol.\"}},\"notice\":\"A contract that manages the root history of the Semaphore identity merkle tree on         Scroll.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ScrollWorldID.sol\":\"ScrollWorldID\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/\",\":@eth-optimism/contracts/=node_modules/@eth-optimism/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@rari-capital/solmate/=lib/solmate/\",\":@scroll-tech/contracts/=node_modules/@scroll-tech/contracts/\",\":ds-test/=lib/scroll-contracts/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":fx-portal/contracts/=lib/contracts/contracts/\",\":hardhat/=lib/scroll-contracts/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":scroll-contracts/=lib/scroll-contracts/\",\":solmate/=lib/solmate/\",\":src/=src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@scroll-tech/contracts/L2/IL2ScrollMessenger.sol\":{\"keccak256\":\"0xf26de78c06c12c50074f3d8498224ffb12374eb0007954c2893e6fa8704215ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://716a1441871a3a922f4f8da2c06c6bf9e030fb26bd85d609ee777b55031ed51d\",\"dweb:/ipfs/QmQ4ywRhjaFZCnE8Ffhj1artfgEGRCDSdF35uv7PjvnqG5\"]},\"node_modules/@scroll-tech/contracts/libraries/IScrollMessenger.sol\":{\"keccak256\":\"0x00aeb2100d7d5fd22ef7fc5ba6198c43815128e778c45d993a8827047a334621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f6a32514cc06086192b64fb6909447839a8ecba043f5ec733c06b7c42ce127f\",\"dweb:/ipfs/Qmd2MDuCZCcRHBVnVeP7SyupncNyBZbhVHFEzNVZr8kG1d\"]},\"src/ScrollCrossDomainOwnable.sol\":{\"keccak256\":\"0x85a4aa57f5f453190af9d65dc7014c0845390accf1154516b4583018a6196913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://895464c5290a1506761945f256a5297465b4cb768dbb7ca4d76da88422ef51cb\",\"dweb:/ipfs/QmdH5yDiLyKmfs5iLqjbvgKDBsoWty6Wv9MMUWzhJDt4jP\"]},\"src/ScrollWorldID.sol\":{\"keccak256\":\"0x100d5572a1512ee65bc6aedc072dce2e0e69ac328fd3b94dd89843fbd5c75d9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c98a6ec28632e604586751fbbe2e3cd501859a0133e0458bcc20e7074ad7601\",\"dweb:/ipfs/QmShNKxWHXjgsezWEWSZsY6E7g2NuKNTqM1sQwcUCnpXke\"]},\"src/SemaphoreVerifier.sol\":{\"keccak256\":\"0xfe9d9568afcaf3beacde57ea8b400f77f783505eaa77986dd9ea74c18fc8cc58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c86f9fd5e48269d983832e5725ecc57b7c73614c0fc372e53e4889fcf822345f\",\"dweb:/ipfs/QmegmxyJsrNP4iq5JkCg2YNvCpBPUHFPNWVsjg3oU9AvMF\"]},\"src/abstract/WorldIDBridge.sol\":{\"keccak256\":\"0xda64973fd8db8a48d1a3a956f749c1147382f20e49031b81693fab759de0559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9a4610c779d89855a987466f77df1f0911a3e9493be1e09540fbd863bcd66d\",\"dweb:/ipfs/QmbVsDpZ8n8uUaBkrzJk8hrbm7sedeTCQKRjV9wM5b2ePC\"]},\"src/interfaces/IScrollWorldID.sol\":{\"keccak256\":\"0xfc308fe25eff70caced1370e54521a5f841930470596277d47f2fce66f5b370a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a7d7721aea8ebfd0779cb5f50ee8e0fb2689903cecaef563244bf50c0a0231a\",\"dweb:/ipfs/QmU5sd91HNvn8mXQJX6xePq9naMNs5yFriwVEUTAs2Abaw\"]},\"src/interfaces/ISemaphoreVerifier.sol\":{\"keccak256\":\"0x148cc393769ae9101bb83e6a3ad96b9ad4d3cfe3e603251b6b45e393154c4f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6caa4906d0823bf15a438a57acc2b63ef8ba86c411f979d712e75e6d883d585\",\"dweb:/ipfs/QmS6cmSQXYBC8zEyMan8pJDejahAM13sqNz8NfRb1QCmKs\"]},\"src/interfaces/IWorldID.sol\":{\"keccak256\":\"0x8e480116b6e51b7c9920e2e452f40a940f693b3318f6d6625c590ac87c2d9e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb203172fcf0b5b2a35fe2dd8cf62af220f0aabcb05ed306c7eaa3836edd6ee6\",\"dweb:/ipfs/QmZ6Z5wJHzWdCtLoNxNWFzKsb5WnT53mjamfziN1VhJbYv\"]},\"src/utils/SemaphoreTreeDepthValidator.sol\":{\"keccak256\":\"0x383ed25705dadfb674c7bd2f8c4999c6368da1bc63b9f212a9526ed3672e7acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93f49cc11cc7a3b6d70aca44a223bfccfe5ccbc513e294076efb0d4b55b0e231\",\"dweb:/ipfs/QmSYASLuaNjFk6zyp436j5Meoa9M6ECnLure286bHKg1Ma\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.21+commit.d9974bed" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "uint8",
                            "name": "_treeDepth",
                            "type": "uint8"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "CannotOverwriteRoot"
                },
                { "inputs": [], "type": "error", "name": "ExpiredRoot" },
                { "inputs": [], "type": "error", "name": "NoRootsSeen" },
                { "inputs": [], "type": "error", "name": "NonExistentRoot" },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OwnableInvalidOwner"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OwnableUnauthorizedAccount"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint8",
                            "name": "depth",
                            "type": "uint8"
                        }
                    ],
                    "type": "error",
                    "name": "UnsupportedTreeDepth"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "isLocal",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "root",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint128",
                            "name": "timestamp",
                            "type": "uint128",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "RootAdded",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newExpiry",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "RootHistoryExpirySet",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTreeDepth",
                    "outputs": [
                        { "internalType": "uint8", "name": "", "type": "uint8" }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isLocal",
                    "outputs": [
                        { "internalType": "bool", "name": "", "type": "bool" }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "latestRoot",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "messenger",
                    "outputs": [
                        {
                            "internalType": "contract IL2ScrollMessenger",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newRoot",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "receiveRoot"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "renounceOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "rootHistory",
                    "outputs": [
                        {
                            "internalType": "uint128",
                            "name": "",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "rootHistoryExpiry",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "expiryTime",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setRootHistoryExpiry"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_owner",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "_isLocal",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "root",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "signalHash",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "nullifierHash",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "externalNullifierHash",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[8]",
                            "name": "proof",
                            "type": "uint256[8]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "verifyProof"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "constructor": {
                        "params": {
                            "_treeDepth": "The depth of the WorldID Semaphore merkle tree."
                        }
                    },
                    "latestRoot()": {
                        "custom:reverts": "NoRootsSeen If there is no latest root."
                    },
                    "owner()": {
                        "details": "Returns the address of the current owner."
                    },
                    "receiveRoot(uint256)": {
                        "custom:reverts": "CannotOverwriteRoot If the root already exists in the root history.string If the caller is not the owner.",
                        "details": "This function can revert if Scroll's ScrollMessenger stops processing proofs",
                        "params": { "newRoot": "The value of the new root." }
                    },
                    "renounceOwnership()": {
                        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
                    },
                    "setRootHistoryExpiry(uint256)": {
                        "custom:reverts": "string If the caller is not the owner.",
                        "params": {
                            "expiryTime": "The new amount of time it takes for a root to expire."
                        }
                    },
                    "transferOwnership(address)": {
                        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                    },
                    "transferOwnership(address,bool)": {
                        "params": {
                            "_isLocal": "Configures the locality of the ownership.",
                            "_owner": "The new owner of the contract."
                        }
                    },
                    "verifyProof(uint256,uint256,uint256,uint256,uint256[8])": {
                        "custom:reverts": "string If the zero-knowledge proof cannot be verified for the public inputs.",
                        "details": "Note that a double-signaling check is not included here, and should be carried by the      caller.",
                        "params": {
                            "externalNullifierHash": "A keccak256 hash of the external nullifier",
                            "nullifierHash": "The nullifier hash",
                            "proof": "The zero-knowledge proof",
                            "root": "The root of the Merkle tree",
                            "signalHash": "A keccak256 hash of the Semaphore signal"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "constructor": {
                        "notice": "Initializes the contract the depth of the associated merkle tree."
                    },
                    "getTreeDepth()": {
                        "notice": "Gets the Semaphore tree depth the contract was initialized with."
                    },
                    "isLocal()": {
                        "notice": "If true, the contract uses the cross domain _checkOwner function override.         If false it uses the standard Ownable _checkOwner function."
                    },
                    "latestRoot()": {
                        "notice": "Gets the value of the latest root."
                    },
                    "receiveRoot(uint256)": {
                        "notice": "This function is called by the state bridge contract when it forwards a new root to         the bridged WorldID."
                    },
                    "rootHistory(uint256)": {
                        "notice": "The mapping between the value of the merkle tree root and the timestamp at which it         entered the root history."
                    },
                    "rootHistoryExpiry()": {
                        "notice": "Gets the amount of time it takes for a root in the root history to expire."
                    },
                    "setRootHistoryExpiry(uint256)": {
                        "notice": "Sets the amount of time it takes for a root in the root history to expire."
                    },
                    "transferOwnership(address,bool)": {
                        "notice": "Allows for ownership to be transferred with specifying the locality."
                    },
                    "verifyProof(uint256,uint256,uint256,uint256,uint256[8])": {
                        "notice": "A verifier for the semaphore protocol."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/",
                "@eth-optimism/contracts/=node_modules/@eth-optimism/contracts/",
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "@prb/test/=lib/prb-test/src/",
                "@rari-capital/solmate/=lib/solmate/",
                "@scroll-tech/contracts/=node_modules/@scroll-tech/contracts/",
                "ds-test/=lib/scroll-contracts/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "fx-portal/contracts/=lib/contracts/contracts/",
                "hardhat/=lib/scroll-contracts/node_modules/hardhat/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
                "prb-test/=lib/prb-test/src/",
                "scroll-contracts/=lib/scroll-contracts/",
                "solmate/=lib/solmate/",
                "src/=src/"
            ],
            "optimizer": { "enabled": true, "runs": 10000 },
            "metadata": { "bytecodeHash": "none" },
            "compilationTarget": { "src/ScrollWorldID.sol": "ScrollWorldID" },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
                "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
                "urls": [
                    "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
                    "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            },
            "node_modules/@scroll-tech/contracts/L2/IL2ScrollMessenger.sol": {
                "keccak256": "0xf26de78c06c12c50074f3d8498224ffb12374eb0007954c2893e6fa8704215ed",
                "urls": [
                    "bzz-raw://716a1441871a3a922f4f8da2c06c6bf9e030fb26bd85d609ee777b55031ed51d",
                    "dweb:/ipfs/QmQ4ywRhjaFZCnE8Ffhj1artfgEGRCDSdF35uv7PjvnqG5"
                ],
                "license": "MIT"
            },
            "node_modules/@scroll-tech/contracts/libraries/IScrollMessenger.sol": {
                "keccak256": "0x00aeb2100d7d5fd22ef7fc5ba6198c43815128e778c45d993a8827047a334621",
                "urls": [
                    "bzz-raw://6f6a32514cc06086192b64fb6909447839a8ecba043f5ec733c06b7c42ce127f",
                    "dweb:/ipfs/Qmd2MDuCZCcRHBVnVeP7SyupncNyBZbhVHFEzNVZr8kG1d"
                ],
                "license": "MIT"
            },
            "src/ScrollCrossDomainOwnable.sol": {
                "keccak256": "0x85a4aa57f5f453190af9d65dc7014c0845390accf1154516b4583018a6196913",
                "urls": [
                    "bzz-raw://895464c5290a1506761945f256a5297465b4cb768dbb7ca4d76da88422ef51cb",
                    "dweb:/ipfs/QmdH5yDiLyKmfs5iLqjbvgKDBsoWty6Wv9MMUWzhJDt4jP"
                ],
                "license": "MIT"
            },
            "src/ScrollWorldID.sol": {
                "keccak256": "0x100d5572a1512ee65bc6aedc072dce2e0e69ac328fd3b94dd89843fbd5c75d9e",
                "urls": [
                    "bzz-raw://8c98a6ec28632e604586751fbbe2e3cd501859a0133e0458bcc20e7074ad7601",
                    "dweb:/ipfs/QmShNKxWHXjgsezWEWSZsY6E7g2NuKNTqM1sQwcUCnpXke"
                ],
                "license": "MIT"
            },
            "src/SemaphoreVerifier.sol": {
                "keccak256": "0xfe9d9568afcaf3beacde57ea8b400f77f783505eaa77986dd9ea74c18fc8cc58",
                "urls": [
                    "bzz-raw://c86f9fd5e48269d983832e5725ecc57b7c73614c0fc372e53e4889fcf822345f",
                    "dweb:/ipfs/QmegmxyJsrNP4iq5JkCg2YNvCpBPUHFPNWVsjg3oU9AvMF"
                ],
                "license": "MIT"
            },
            "src/abstract/WorldIDBridge.sol": {
                "keccak256": "0xda64973fd8db8a48d1a3a956f749c1147382f20e49031b81693fab759de0559c",
                "urls": [
                    "bzz-raw://3e9a4610c779d89855a987466f77df1f0911a3e9493be1e09540fbd863bcd66d",
                    "dweb:/ipfs/QmbVsDpZ8n8uUaBkrzJk8hrbm7sedeTCQKRjV9wM5b2ePC"
                ],
                "license": "MIT"
            },
            "src/interfaces/IScrollWorldID.sol": {
                "keccak256": "0xfc308fe25eff70caced1370e54521a5f841930470596277d47f2fce66f5b370a",
                "urls": [
                    "bzz-raw://7a7d7721aea8ebfd0779cb5f50ee8e0fb2689903cecaef563244bf50c0a0231a",
                    "dweb:/ipfs/QmU5sd91HNvn8mXQJX6xePq9naMNs5yFriwVEUTAs2Abaw"
                ],
                "license": "MIT"
            },
            "src/interfaces/ISemaphoreVerifier.sol": {
                "keccak256": "0x148cc393769ae9101bb83e6a3ad96b9ad4d3cfe3e603251b6b45e393154c4f49",
                "urls": [
                    "bzz-raw://d6caa4906d0823bf15a438a57acc2b63ef8ba86c411f979d712e75e6d883d585",
                    "dweb:/ipfs/QmS6cmSQXYBC8zEyMan8pJDejahAM13sqNz8NfRb1QCmKs"
                ],
                "license": "MIT"
            },
            "src/interfaces/IWorldID.sol": {
                "keccak256": "0x8e480116b6e51b7c9920e2e452f40a940f693b3318f6d6625c590ac87c2d9e02",
                "urls": [
                    "bzz-raw://eb203172fcf0b5b2a35fe2dd8cf62af220f0aabcb05ed306c7eaa3836edd6ee6",
                    "dweb:/ipfs/QmZ6Z5wJHzWdCtLoNxNWFzKsb5WnT53mjamfziN1VhJbYv"
                ],
                "license": "MIT"
            },
            "src/utils/SemaphoreTreeDepthValidator.sol": {
                "keccak256": "0x383ed25705dadfb674c7bd2f8c4999c6368da1bc63b9f212a9526ed3672e7acb",
                "urls": [
                    "bzz-raw://93f49cc11cc7a3b6d70aca44a223bfccfe5ccbc513e294076efb0d4b55b0e231",
                    "dweb:/ipfs/QmSYASLuaNjFk6zyp436j5Meoa9M6ECnLure286bHKg1Ma"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 30
}
