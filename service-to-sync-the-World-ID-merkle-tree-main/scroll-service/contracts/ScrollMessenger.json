{
    "abi": [
        {
            "type": "function",
            "name": "sendMessage",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                { "name": "message", "type": "bytes", "internalType": "bytes" },
                {
                    "name": "gasLimit",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "refundAddress",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "sendMessage",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                { "name": "message", "type": "bytes", "internalType": "bytes" },
                {
                    "name": "gasLimit",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "xDomainMessageSender",
            "inputs": [],
            "outputs": [
                { "name": "", "type": "address", "internalType": "address" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "FailedRelayedMessage",
            "inputs": [
                {
                    "name": "messageHash",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "RelayedMessage",
            "inputs": [
                {
                    "name": "messageHash",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SentMessage",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "target",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "messageNonce",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "gasLimit",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "message",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                }
            ],
            "anonymous": false
        }
    ],
    "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
    "deployedBytecode": {
        "object": "0x",
        "sourceMap": "",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "sendMessage(address,uint256,bytes,uint256)": "b2267a7b",
        "sendMessage(address,uint256,bytes,uint256,address)": "5f7b1577",
        "xDomainMessageSender()": "6e296e45"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"FailedRelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"RelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"SentMessage\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FailedRelayedMessage(bytes32)\":{\"params\":{\"messageHash\":\"The hash of the message.\"}},\"RelayedMessage(bytes32)\":{\"params\":{\"messageHash\":\"The hash of the message.\"}},\"SentMessage(address,address,uint256,uint256,uint256,bytes)\":{\"params\":{\"gasLimit\":\"The optional gas limit passed to L1 or L2.\",\"message\":\"The calldata passed to the target contract.\",\"messageNonce\":\"The nonce of the message.\",\"sender\":\"The address of the sender who initiates the message.\",\"target\":\"The address of target contract to call.\",\"value\":\"The amount of value passed to the target contract.\"}}},\"kind\":\"dev\",\"methods\":{\"sendMessage(address,uint256,bytes,uint256)\":{\"params\":{\"gasLimit\":\"Gas limit required to complete the message relay on corresponding chain.\",\"message\":\"The content of the message.\",\"target\":\"The address of account who receive the message.\",\"value\":\"The amount of ether passed when call target contract.\"}},\"sendMessage(address,uint256,bytes,uint256,address)\":{\"params\":{\"gasLimit\":\"Gas limit required to complete the message relay on corresponding chain.\",\"message\":\"The content of the message.\",\"refundAddress\":\"The address of account who will receive the refunded fee.\",\"target\":\"The address of account who receive the message.\",\"value\":\"The amount of ether passed when call target contract.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"FailedRelayedMessage(bytes32)\":{\"notice\":\"Emitted when a cross domain message is failed to relay.\"},\"RelayedMessage(bytes32)\":{\"notice\":\"Emitted when a cross domain message is relayed successfully.\"},\"SentMessage(address,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Emitted when a cross domain message is sent.\"}},\"kind\":\"user\",\"methods\":{\"sendMessage(address,uint256,bytes,uint256)\":{\"notice\":\"Send cross chain message from L1 to L2 or L2 to L1.\"},\"sendMessage(address,uint256,bytes,uint256,address)\":{\"notice\":\"Send cross chain message from L1 to L2 or L2 to L1.\"},\"xDomainMessageSender()\":{\"notice\":\"Return the sender of a cross domain message.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@scroll-tech/contracts/libraries/IScrollMessenger.sol\":\"IScrollMessenger\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/\",\":@eth-optimism/contracts/=node_modules/@eth-optimism/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@rari-capital/solmate/=lib/solmate/\",\":@scroll-tech/contracts/=node_modules/@scroll-tech/contracts/\",\":ds-test/=lib/scroll-contracts/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":fx-portal/contracts/=lib/contracts/contracts/\",\":hardhat/=lib/scroll-contracts/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":scroll-contracts/=lib/scroll-contracts/\",\":solmate/=lib/solmate/\",\":src/=src/\"]},\"sources\":{\"node_modules/@scroll-tech/contracts/libraries/IScrollMessenger.sol\":{\"keccak256\":\"0x00aeb2100d7d5fd22ef7fc5ba6198c43815128e778c45d993a8827047a334621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f6a32514cc06086192b64fb6909447839a8ecba043f5ec733c06b7c42ce127f\",\"dweb:/ipfs/Qmd2MDuCZCcRHBVnVeP7SyupncNyBZbhVHFEzNVZr8kG1d\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.21+commit.d9974bed" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "messageHash",
                            "type": "bytes32",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "FailedRelayedMessage",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "messageHash",
                            "type": "bytes32",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "RelayedMessage",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "messageNonce",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "gasLimit",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes",
                            "name": "message",
                            "type": "bytes",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SentMessage",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "message",
                            "type": "bytes"
                        },
                        {
                            "internalType": "uint256",
                            "name": "gasLimit",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "refundAddress",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "sendMessage"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "message",
                            "type": "bytes"
                        },
                        {
                            "internalType": "uint256",
                            "name": "gasLimit",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "sendMessage"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "xDomainMessageSender",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "sendMessage(address,uint256,bytes,uint256)": {
                        "params": {
                            "gasLimit": "Gas limit required to complete the message relay on corresponding chain.",
                            "message": "The content of the message.",
                            "target": "The address of account who receive the message.",
                            "value": "The amount of ether passed when call target contract."
                        }
                    },
                    "sendMessage(address,uint256,bytes,uint256,address)": {
                        "params": {
                            "gasLimit": "Gas limit required to complete the message relay on corresponding chain.",
                            "message": "The content of the message.",
                            "refundAddress": "The address of account who will receive the refunded fee.",
                            "target": "The address of account who receive the message.",
                            "value": "The amount of ether passed when call target contract."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "sendMessage(address,uint256,bytes,uint256)": {
                        "notice": "Send cross chain message from L1 to L2 or L2 to L1."
                    },
                    "sendMessage(address,uint256,bytes,uint256,address)": {
                        "notice": "Send cross chain message from L1 to L2 or L2 to L1."
                    },
                    "xDomainMessageSender()": {
                        "notice": "Return the sender of a cross domain message."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/",
                "@eth-optimism/contracts/=node_modules/@eth-optimism/contracts/",
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "@prb/test/=lib/prb-test/src/",
                "@rari-capital/solmate/=lib/solmate/",
                "@scroll-tech/contracts/=node_modules/@scroll-tech/contracts/",
                "ds-test/=lib/scroll-contracts/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "fx-portal/contracts/=lib/contracts/contracts/",
                "hardhat/=lib/scroll-contracts/node_modules/hardhat/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
                "prb-test/=lib/prb-test/src/",
                "scroll-contracts/=lib/scroll-contracts/",
                "solmate/=lib/solmate/",
                "src/=src/"
            ],
            "optimizer": { "enabled": true, "runs": 10000 },
            "metadata": { "bytecodeHash": "none" },
            "compilationTarget": {
                "node_modules/@scroll-tech/contracts/libraries/IScrollMessenger.sol": "IScrollMessenger"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "node_modules/@scroll-tech/contracts/libraries/IScrollMessenger.sol": {
                "keccak256": "0x00aeb2100d7d5fd22ef7fc5ba6198c43815128e778c45d993a8827047a334621",
                "urls": [
                    "bzz-raw://6f6a32514cc06086192b64fb6909447839a8ecba043f5ec733c06b7c42ce127f",
                    "dweb:/ipfs/Qmd2MDuCZCcRHBVnVeP7SyupncNyBZbhVHFEzNVZr8kG1d"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 26
}
